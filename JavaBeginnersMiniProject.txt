Mini Project

Arogya Hospital Information Management System

Hey learner!! Remember our client Arogya Hospital, they liked your project for whom you implemented all the use cases using java, 
and they are back with another project contract. You need to handle all the exceptions in the existing project.  
Read medical records from csv file and display on console. 
Before start implementing this project, design class diagram, use case diagram and sequence diagram. 
Understand the requirements below and use what you learned about Java concepts such as Collections, OOPs, Exception handling, IO Streams.   

Please read the description carefully before you start implementation. Based on the success of this project, 
Arogya will award additional contracts to bitLabs.

The management system should have the following features: -

● Add a patient’s details to the system whenever there is a new patient admitted.
The patient details should include his/her name, age, gender, Aadhar Card number, contact number, city, address, date of admission, 
guardian's name, guardian’s address, guardian’s contact number. Assign a unique id to each patient admitted.

Note: Validate user entered data. Such as
1. number of digits in age is 1 or 2 digits.
2. Aadhar card number should contains 12 digits.
3. Contact number should contain 10 digits only. Etc..

● The system can show the list of patients at any point of time. Basically, the system should be dynamic and a real time system. 
In other words, it can provide results at any point of time without any delays. Display proper error message if patients list is empty.

● Given the unique id assigned to a patient, provide all the details of that patient.
In other words, the system should provide details about a patient using his/her unique id or name.

● The system can provide the list of all the patients from a particular city or a state. 
Also provide the list of patients belonging to a particular age group.
For example you can be asked to give the list of patients in the age group 50-60. Handle NullPointerException if user entered values are empty. 

● Mark the patient recovered when he starts working fine. 

● The system should be able to delete the information of a patient when asked to.  
Handle NullPointerException if user entered patient id is not present in list.


Implement these features using efficient data structures and OOP concepts learnt in the Java Foundation course. 
Write clean and organized codes using proper objects and methods.
